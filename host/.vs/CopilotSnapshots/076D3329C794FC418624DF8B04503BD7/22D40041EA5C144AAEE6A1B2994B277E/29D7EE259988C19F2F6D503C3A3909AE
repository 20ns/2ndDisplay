cmake_minimum_required(VERSION 3.24)

project(TabDisplay VERSION 0.1.0 LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Warning settings
if(MSVC)
    add_compile_options(/W4 /WX)
else()
    add_compile_options(-Wall -Wextra -Werror)
endif()

# Include CPM.cmake for dependency management
include(cmake/CPM.cmake)

# Add third-party dependencies
CPMAddPackage(
    NAME spdlog
    GITHUB_REPOSITORY gabime/spdlog
    VERSION 1.11.0
    OPTIONS
        "SPDLOG_BUILD_EXAMPLE OFF"
        "SPDLOG_BUILD_TESTS OFF"
        "SPDLOG_BUILD_BENCH OFF"
)

CPMAddPackage(
    NAME nlohmann_json
    GITHUB_REPOSITORY nlohmann/json
    VERSION 3.11.2
)

# FEC library (add your choice of MIT FEC lib here)
add_subdirectory(third_party/fec)

# Set include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/third_party
    ${CMAKE_CURRENT_BINARY_DIR}
)

# Define sources
set(SOURCES
    src/main.cpp
    src/CaptureDXGI.cpp
    src/EncoderAMF.cpp
    src/UdpSender.cpp
    src/InputInjector.cpp
    src/Settings.cpp
    src/TrayApp.xaml.cpp
)

# Microsoft.WindowsAppSDK for WinUI 3
find_package(Microsoft.WindowsAppSDK REQUIRED)

# Create executable
add_executable(TabDisplay WIN32 ${SOURCES})

# Link libraries
target_link_libraries(TabDisplay PRIVATE
    spdlog::spdlog
    nlohmann_json::nlohmann_json
    fec
    d3d11
    dxgi
    amf
    ws2_32
    bcrypt
    shcore
    winmm
    Microsoft.WindowsAppSDK
)

# Copy ViGEmClient.dll to output directory
add_custom_command(
    TARGET TabDisplay POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ViGEmClient.dll
        $<TARGET_FILE_DIR:TabDisplay>
)

# Install
install(TARGETS TabDisplay DESTINATION bin)

# Generate CMake presets
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/TabDisplay-config.cmake.in
               ${CMAKE_CURRENT_BINARY_DIR}/TabDisplay-config.cmake @ONLY)